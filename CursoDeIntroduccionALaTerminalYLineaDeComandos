date => Fecha
echo => Imprimir en pantalla
man [] => manual [comando del que se quiere saber más]
history => Historia de todos los comandos
  ! []  => [id de comando]
rm [ruta Archivo] => borrar Archivo.

cp [ruta Origen] [ruta Destino] => copiar(Archivo)
cp [ruta Origen] [ruta Destino] => copiar(directorio)
mv [ruta Origen] [ruta Destino] => Mover o cortar(Archivo o directorio)
rmdir [ruta o directorio] => Eliminar directorios

ls = Lista los archivos que se encuentran en el directorio sobre el que estamos trabajando
ls -a = Lista todos los archivos incluyendo aquellos que se han definido como ocultos
. => Todos los directorios contienen los archivos . y .., estos son punteros a directorios. (directorio actual)
.. => Todos los directorios contienen los archivos . y .., estos son punteros a directorios. (directorio padre)
ls -t => Ordena los archivos por fecha de modificación
ls -x => Ordena los archivos por extensión
ls -l => Muestra toda la información: usuario, grupo, permisos, tamaño, fecha y hora de creación
ls -lh => Muestra la misma información que ls -l pero con las unidades de tamaño en KB, MB.
ls -R => Muestra el contenido de todos los subdirectorios de forma recursiva
ls -S => Ordena los resultados por tamaño de archivo.
pwd => Print Working Directory: se usa para mostrar el directorio actual en el que nos encontramos trabajando
cd => se utiliza para cambiar de directorio. Luego del comando se debe especificar la ruta del directorio al que nos queremos mover.

vim 'o' nano name_file => manejo de archivos.

cat => Muestra el contenido de un archivo
head => muestra las primeras lineas de un archivo.
head -n [numero de lineas] => muestra las lineas que se indique desde el comienzo del archivos
tail -n [numero de lineas] => muestra las lineas que se indique desde el final del archivos

grep [dato buscado] [archivo en que se va a buscar] = buscar dentro de archivos
grep -i [dato buscado] [archivo en que se va a buscar] = buscar dentro de archivos(incluyendo mayusculas y minusculas)
grep -i [dato buscado] [archivo en que se va a buscar] = buscar dentro de archivos(incluyendo mayusculas y minusculas)
grep -i ["dato buscado[AllEnd$]"] [archivo en que se va a buscar] = buscar dentro de archivos, todo lo que finalice [AllEnd] "$" (incluyendo mayusculas y minusculas)
sed '[s/[DatosARemplazar]/[nuevoDato]/g]' [archivo en que se va a buscar]=Remplazar un dato en el flujo que se expone en la terminal, nunca en el archivo original
sed '$d' [archivo]=borrar la útima linea de un archivo
Awk -F ['delimitador;'] '{print$1}'= Sirve para tabajar con archivos estructurados ejemplo .csv, este ejemplo trae la primera columna
Awk -F ['delimitador;'] '{print$1}'= Sirve para tabajar con archivos estructurados ejemplo .csv, este ejemplo trae la primera columna
